{
  "Comment": "A description of my state machine",
  "StartAt": "GetItem",
  "States": {
    "GetItem": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:getItem",
      "Parameters": {
        "TableName": "${TableName}",
        "Key": {
          "tenant-name": {
            "S.$": "$.tenant.name"
          }
        }
      },
      "Next": "ListModelPackages",
      "Catch": [
        {
          "ErrorEquals": [
            "States.TaskFailed"
          ],
          "Next": "Fail"
        }
      ],
      "ResultPath": "$.response.get-item"
    },
    "ListModelPackages": {
      "Type": "Task",
      "Next": "DescribeEndpointPre",
      "Parameters": {
        "ModelPackageGroupName.$": "$.response.get-item.Item.tenant-modelregistry.S",
        "MaxResults": 20,
        "ModelApprovalStatus": "Approved"
      },
      "Resource": "arn:aws:states:::aws-sdk:sagemaker:listModelPackages",
      "Catch": [
        {
          "ErrorEquals": [
            "States.TaskFailed"
          ],
          "Next": "Fail"
        }
      ],
      "ResultPath": "$.response.list-model-packages"
    },
    "UpdateEndpoint": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sagemaker:updateEndpoint",
      "Parameters": {
        "EndpointConfigName.$": "$.tenant.name",
        "EndpointName.$": "$.tenant.name"
      },
      "Next": "DescribeEndpointPost",
      "Catch": [
        {
          "ErrorEquals": [
            "States.TaskFailed"
          ],
          "Next": "Fail"
        }
      ],
      "ResultPath": "$.response.update-endpoint"
    },
    "DescribeEndpointPost": {
      "Type": "Task",
      "Next": "Endpoint InService?",
      "Parameters": {
        "EndpointName.$": "$.tenant.name"
      },
      "Resource": "arn:aws:states:::aws-sdk:sagemaker:describeEndpoint",
      "ResultPath": "$.response.describe-endpoint-post"
    },
    "Endpoint InService?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.response.describe-endpoint-post.EndpointStatus",
          "StringEquals": "InService",
          "Next": "InvokeEndpoint"
        }
      ],
      "Default": "Wait"
    },
    "Wait": {
      "Type": "Wait",
      "Seconds": 60,
      "Next": "DescribeEndpointPost"
    },
    "DescribeEndpointPre": {
      "Type": "Task",
      "Next": "UpdateEndpoint",
      "Parameters": {
        "EndpointName.$": "$.tenant.name"
      },
      "Resource": "arn:aws:states:::aws-sdk:sagemaker:describeEndpoint",
      "Catch": [
        {
          "ErrorEquals": [
            "States.TaskFailed"
          ],
          "Next": "GetRole",
          "ResultPath": "$.response.describe-endpoint"
        }
      ],
      "ResultPath": "$.response.describe-endpoint-pre"
    },
    "GetRole": {
      "Type": "Task",
      "Next": "CreateModel",
      "Parameters": {
        "RoleName": "sfn-role"
      },
      "Resource": "arn:aws:states:::aws-sdk:iam:getRole",
      "ResultPath": "$.response.get-role",
      "Catch": [
        {
          "ErrorEquals": [
            "States.TaskFailed"
          ],
          "Next": "Fail"
        }
      ]
    },
    "CreateModel": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sagemaker:createModel",
      "Parameters": {
        "ExecutionRoleArn.$": "$.response.get-role.Role.Arn",
        "ModelName.$": "States.Format('{}-customer-churn', $.tenant.name)",
        "PrimaryContainer": {
          "ContainerHostname.$": "$.tenant.name",
          "ModelPackageName.$": "$.tenant.version"
        }
      },
      "Next": "DescribeEndpointConfig",
      "ResultPath": "$.response.create-model",
      "Catch": [
        {
          "ErrorEquals": [
            "States.TaskFailed"
          ],
          "Next": "Fail"
        }
      ]
    },
    "DescribeEndpointConfig": {
      "Type": "Task",
      "Next": "CreateEndpoint",
      "Parameters": {
        "EndpointConfigName.$": "$.tenant.name"
      },
      "Resource": "arn:aws:states:::aws-sdk:sagemaker:describeEndpointConfig",
      "Catch": [
        {
          "ErrorEquals": [
            "States.TaskFailed"
          ],
          "Next": "CreateEndpointConfig",
          "ResultPath": "$.response.describe-endpoint-config"
        }
      ],
      "ResultPath": "$.response.describe-endpoint-config"
    },
    "CreateEndpointConfig": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sagemaker:createEndpointConfig",
      "Parameters": {
        "EndpointConfigName.$": "$.tenant.name",
        "ProductionVariants": [
          {
            "InitialInstanceCount": 1,
            "InitialVariantWeight": 1,
            "InstanceType": "ml.t2.medium",
            "ModelName.$": "States.Format('{}-customer-churn', $.tenant.name)",
            "VariantName": "AllTraffic"
          }
        ]
      },
      "Next": "CreateEndpoint",
      "Catch": [
        {
          "ErrorEquals": [
            "States.TaskFailed"
          ],
          "Next": "Fail"
        }
      ],
      "ResultPath": "$.response.create-endpoint-config"
    },
    "CreateEndpoint": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sagemaker:createEndpoint",
      "Parameters": {
        "EndpointConfigName.$": "$.tenant.name",
        "EndpointName.$": "$.tenant.name"
      },
      "Next": "DescribeEndpointPost",
      "Catch": [
        {
          "ErrorEquals": [
            "States.TaskFailed"
          ],
          "Next": "Fail",
          "ResultPath": "$.response.create-endpoint"
        }
      ],
      "ResultPath": "$.response.create-endpoint"
    },
    "InvokeEndpoint": {
      "Type": "Task",
      "Next": "PutItem",
      "Parameters": {
        "Body": "1 1:62 3:5.072152061281491 4:5 5:6.600411338234018 6:2 7:3.533501078944156 8:300 9:4.395299898765257 10:7 11:6 58:1 92:1 97:1 98:1",
        "EndpointName.$": "$.response.describe-endpoint-post.EndpointName"
      },
      "Resource": "arn:aws:states:::aws-sdk:sagemakerruntime:invokeEndpoint",
      "Catch": [
        {
          "ErrorEquals": [
            "States.TaskFailed"
          ],
          "Next": "Fail"
        }
      ],
      "ResultPath": "$.response.invoke-endpoint"
    },
    "PutItem": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:putItem",
      "Parameters": {
        "TableName": "${TableName}",
        "Item": {
          "tenant-name": {
            "S.$": "$.tenant.name"
          },
          "tenant-bucket": {
            "S.$": "$.response.get-item.Item.tenant-bucket.S"
          },
          "tenant-modelregistry": {
            "S.$": "$.response.get-item.Item.tenant-modelregistry.S"
          },
          "tenant-endpoint": {
            "S.$": "$.response.describe-endpoint-post.EndpointName"
          }
        }
      },
      "Next": "Success",
      "Catch": [
        {
          "ErrorEquals": [
            "States.TaskFailed"
          ],
          "Next": "Fail"
        }
      ]
    },
    "Fail": {
      "Type": "Fail"
    },
    "Success": {
      "Type": "Succeed"
    }
  }
}
